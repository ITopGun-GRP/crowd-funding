package com.johnsnowlabs.nlp.annotators.assertion.logreg

import com.johnsnowlabs.nlp.{Annotation, AnnotatorModel, AnnotatorType}
import com.johnsnowlabs.nlp.embeddings.ModelWithWordEmbeddings
import org.apache.spark.ml.classification.LogisticRegression

/**
  * Created by jose on 22/11/17.
  */
class AssertionLogRegModel(model:LogisticRegression) extends AnnotatorModel[AssertionLogRegModel] with ModelWithWordEmbeddings{

  /**
    * takes a document and annotations and produces new annotations of this annotator's annotation type
    *
    * @param annotations Annotations that correspond to inputAnnotationCols generated by previous annotators if any
    * @return any number of annotations processed for every input annotation. Not necessary one to one relationship
    */
  override protected def annotate(annotations: Seq[Annotation]): Seq[Annotation] = ???

  override val annotatorType: AnnotatorType = AnnotatorType.ASSERTION
  override val requiredAnnotatorTypes: Array[String] = null
  override val uid: String = ""
}

object AssertionLogRegModel {
  def apply(model: LogisticRegression): AssertionLogRegModel = new AssertionLogRegModel(model)
}
